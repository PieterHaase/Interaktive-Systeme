[gd_resource type="VisualShader" load_steps=54 format=2]

[sub_resource type="VisualShaderNodeColorConstant" id=7]
constant = Color( 0.188235, 0.266667, 1, 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=60]
default_input_values = [ 0, 0.0, 1, 0.15 ]

[sub_resource type="VisualShaderNodeVectorOp" id=63]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 3, 3, 3 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=64]
constant = 3.0

[sub_resource type="VisualShaderNodeFresnel" id=4]
default_input_values = [ 2, false, 3, 2.0 ]

[sub_resource type="VisualShaderNodeScalarConstant" id=8]
constant = 0.1

[sub_resource type="VisualShaderNodeScalarOp" id=9]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=10]
constant = 2.0

[sub_resource type="VisualShaderNodeVectorOp" id=20]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id=22]

[sub_resource type="VisualShaderNodeScalarOp" id=23]
default_input_values = [ 0, 0.0, 1, 20.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarOp" id=25]
default_input_values = [ 0, 1.0, 1, 5.0 ]
operator = 2

[sub_resource type="Gradient" id=26]
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=27]
gradient = SubResource( 26 )

[sub_resource type="VisualShaderNodeTexture" id=28]
texture = SubResource( 27 )

[sub_resource type="VisualShaderNodeTexture" id=29]
texture = SubResource( 27 )

[sub_resource type="VisualShaderNodeScalarOp" id=30]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeInput" id=31]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=32]
function = 1

[sub_resource type="VisualShaderNodeScalarOp" id=33]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=34]
constant = 0.1

[sub_resource type="VisualShaderNodeScalarConstant" id=35]
constant = 2.2

[sub_resource type="VisualShaderNodeScalarOp" id=36]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=37]
default_input_values = [ 0, 1.0, 1, 0.0, 2, 0.0 ]

[sub_resource type="VisualShaderNodeInput" id=38]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=39]
function = 1

[sub_resource type="VisualShaderNodeScalarOp" id=40]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=41]
constant = 0.05

[sub_resource type="VisualShaderNodeScalarConstant" id=42]
constant = 2.0

[sub_resource type="VisualShaderNodeScalarOp" id=43]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=45]

[sub_resource type="VisualShaderNodeVectorOp" id=46]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=47]

[sub_resource type="VisualShaderNodeVectorOp" id=48]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=49]

[sub_resource type="VisualShaderNodeVectorOp" id=50]
operator = 3

[sub_resource type="VisualShaderNodeScalarConstant" id=51]
constant = 2.0

[sub_resource type="VisualShaderNodeInput" id=52]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id=13]
default_input_values = [ 0, 1.0, 1, 0.0, 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarFunc" id=53]
function = 1

[sub_resource type="VisualShaderNodeScalarOp" id=54]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=55]
constant = 0.02

[sub_resource type="VisualShaderNodeScalarConstant" id=56]
constant = 1.0

[sub_resource type="VisualShaderNodeScalarOp" id=57]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=58]

[sub_resource type="VisualShaderNodeScalarUniform" id=59]
uniform_name = "Movement"

[sub_resource type="VisualShaderNodeScalarOp" id=61]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=62]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=14]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=15]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=16]
operator = 2

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, shadows_disabled, ambient_light_disabled;

uniform sampler2D tex_vtx_26;
uniform sampler2D tex_vtx_24;
uniform float Movement;



void vertex() {
// Input:2
	vec3 n_out2p0 = VERTEX;

// Input:35
	float n_out35p0 = TIME;

// Scalar:39
	float n_out39p0 = 2.000000;

// ScalarOp:37
	float n_out37p0 = n_out35p0 * n_out39p0;

// ScalarFunc:36
	float n_out36p0 = cos(n_out37p0);

// Scalar:38
	float n_out38p0 = 0.050000;

// ScalarOp:40
	float n_out40p0 = n_out36p0 * n_out38p0;

// VectorCompose:34
	float n_in34p1 = 0.00000;
	vec3 n_out34p0 = vec3(n_out40p0, n_in34p1, n_out40p0);

// VectorOp:53
	vec3 n_out53p0 = n_out34p0 * n_out2p0;

// Input:16
	vec3 n_out16p0 = VERTEX;

// VectorDecompose:18
	float n_out18p0 = n_out16p0.x;
	float n_out18p1 = n_out16p0.y;
	float n_out18p2 = n_out16p0.z;

// ScalarOp:27
	float n_in27p1 = 1.00000;
	float n_out27p0 = n_out18p1 + n_in27p1;

// Texture:26
	vec4 tex_vtx_26_read = texture(tex_vtx_26, vec3(n_out27p0).xy);
	vec3 n_out26p0 = tex_vtx_26_read.rgb;
	float n_out26p1 = tex_vtx_26_read.a;

// Texture:24
	vec4 tex_vtx_24_read = texture(tex_vtx_24, vec3(n_out18p1).xy);
	vec3 n_out24p0 = tex_vtx_24_read.rgb;
	float n_out24p1 = tex_vtx_24_read.a;

// ScalarOp:23
	float n_out23p0 = dot(n_out26p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out24p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarOp:19
	float n_out19p0 = n_out18p1 * n_out23p0;

// VectorOp:55
	vec3 n_out55p0 = n_out53p0 * vec3(n_out19p0);

// VectorOp:54
	vec3 n_out54p0 = n_out2p0 + n_out55p0;

// Input:7
	float n_out7p0 = TIME;

// Scalar:12
	float n_out12p0 = 2.000000;

// ScalarOp:11
	float n_out11p0 = n_out7p0 * n_out12p0;

// ScalarFunc:8
	float n_out8p0 = sin(n_out11p0);

// Scalar:10
	float n_out10p0 = 0.100000;

// ScalarOp:9
	float n_out9p0 = n_out8p0 * n_out10p0;

// Input:59
	float n_out59p0 = TIME;

// Scalar:63
	float n_out63p0 = 1.000000;

// ScalarOp:61
	float n_out61p0 = n_out59p0 * n_out63p0;

// ScalarFunc:60
	float n_out60p0 = cos(n_out61p0);

// Scalar:62
	float n_out62p0 = 0.020000;

// ScalarOp:64
	float n_out64p0 = n_out60p0 * n_out62p0;

// ScalarUniform:66
	float n_out66p0 = Movement;

// ScalarOp:68
	float n_in68p1 = 0.50000;
	float n_out68p0 = n_out66p0 * n_in68p1;

// ScalarOp:67
	float n_out67p0 = n_out64p0 - n_out68p0;

// Input:28
	float n_out28p0 = TIME;

// Scalar:32
	float n_out32p0 = 2.200000;

// ScalarOp:30
	float n_out30p0 = n_out28p0 * n_out32p0;

// ScalarFunc:29
	float n_out29p0 = cos(n_out30p0);

// Scalar:31
	float n_out31p0 = 0.100000;

// ScalarOp:33
	float n_out33p0 = n_out29p0 * n_out31p0;

// ScalarOp:65
	float n_out65p0 = n_out33p0 + n_out66p0;

// VectorCompose:6
	vec3 n_out6p0 = vec3(n_out9p0, n_out67p0, n_out65p0);

// VectorOp:14
	vec3 n_out14p0 = n_out6p0 * vec3(n_out19p0);

// VectorOp:44
	vec3 n_out44p0 = n_out2p0 + n_out14p0;

// VectorOp:56
	vec3 n_out56p0 = n_out54p0 + n_out44p0;

// Scalar:58
	float n_out58p0 = 2.000000;

// VectorOp:57
	vec3 n_out57p0 = n_out56p0 / vec3(n_out58p0);

// Output:0
	VERTEX = n_out57p0;

}

void fragment() {
// Fresnel:2
	float n_in2p3 = 2.00000;
	float n_out2p0 = pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in2p3);

// ScalarOp:17
	float n_in17p1 = 0.15000;
	float n_out17p0 = n_out2p0 + n_in17p1;

// Color:16
	vec3 n_out16p0 = vec3(0.188235, 0.266667, 1.000000);
	float n_out16p1 = 1.000000;

// Scalar:19
	float n_out19p0 = 3.000000;

// VectorOp:18
	vec3 n_out18p0 = n_out16p0 * vec3(n_out19p0);

// Output:0
	ALPHA = n_out17p0;
	EMISSION = n_out18p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -789.186, 81.8469 )
flags/ambient_light_disabled = true
flags/shadows_disabled = true
nodes/vertex/2/node = SubResource( 11 )
nodes/vertex/2/position = Vector2( -920, -500 )
nodes/vertex/6/node = SubResource( 13 )
nodes/vertex/6/position = Vector2( -1520, 260 )
nodes/vertex/7/node = SubResource( 14 )
nodes/vertex/7/position = Vector2( -2720, -100 )
nodes/vertex/8/node = SubResource( 15 )
nodes/vertex/8/position = Vector2( -2340, -40 )
nodes/vertex/9/node = SubResource( 16 )
nodes/vertex/9/position = Vector2( -2080, -40 )
nodes/vertex/10/node = SubResource( 8 )
nodes/vertex/10/position = Vector2( -2320, 40 )
nodes/vertex/11/node = SubResource( 9 )
nodes/vertex/11/position = Vector2( -2540, -60 )
nodes/vertex/12/node = SubResource( 10 )
nodes/vertex/12/position = Vector2( -2740, 0 )
nodes/vertex/14/node = SubResource( 20 )
nodes/vertex/14/position = Vector2( -1000, 340 )
nodes/vertex/16/node = SubResource( 21 )
nodes/vertex/16/position = Vector2( -2460, 740 )
nodes/vertex/18/node = SubResource( 22 )
nodes/vertex/18/position = Vector2( -2220, 720 )
nodes/vertex/19/node = SubResource( 23 )
nodes/vertex/19/position = Vector2( -1280, 660 )
nodes/vertex/23/node = SubResource( 25 )
nodes/vertex/23/position = Vector2( -1740, 900 )
nodes/vertex/24/node = SubResource( 28 )
nodes/vertex/24/position = Vector2( -1980, 860 )
nodes/vertex/26/node = SubResource( 29 )
nodes/vertex/26/position = Vector2( -1980, 1040 )
nodes/vertex/27/node = SubResource( 30 )
nodes/vertex/27/position = Vector2( -2160, 1080 )
nodes/vertex/28/node = SubResource( 31 )
nodes/vertex/28/position = Vector2( -3280, 460 )
nodes/vertex/29/node = SubResource( 32 )
nodes/vertex/29/position = Vector2( -2900, 520 )
nodes/vertex/30/node = SubResource( 33 )
nodes/vertex/30/position = Vector2( -3100, 500 )
nodes/vertex/31/node = SubResource( 34 )
nodes/vertex/31/position = Vector2( -2880, 600 )
nodes/vertex/32/node = SubResource( 35 )
nodes/vertex/32/position = Vector2( -3300, 560 )
nodes/vertex/33/node = SubResource( 36 )
nodes/vertex/33/position = Vector2( -2640, 520 )
nodes/vertex/34/node = SubResource( 37 )
nodes/vertex/34/position = Vector2( -1380, -300 )
nodes/vertex/35/node = SubResource( 38 )
nodes/vertex/35/position = Vector2( -2280, -400 )
nodes/vertex/36/node = SubResource( 39 )
nodes/vertex/36/position = Vector2( -1900, -340 )
nodes/vertex/37/node = SubResource( 40 )
nodes/vertex/37/position = Vector2( -2100, -360 )
nodes/vertex/38/node = SubResource( 41 )
nodes/vertex/38/position = Vector2( -1980, -260 )
nodes/vertex/39/node = SubResource( 42 )
nodes/vertex/39/position = Vector2( -2300, -300 )
nodes/vertex/40/node = SubResource( 43 )
nodes/vertex/40/position = Vector2( -1640, -340 )
nodes/vertex/44/node = SubResource( 45 )
nodes/vertex/44/position = Vector2( -220, 120 )
nodes/vertex/53/node = SubResource( 46 )
nodes/vertex/53/position = Vector2( -1120, -260 )
nodes/vertex/54/node = SubResource( 47 )
nodes/vertex/54/position = Vector2( -545.514, -433.8 )
nodes/vertex/55/node = SubResource( 48 )
nodes/vertex/55/position = Vector2( -800, -260 )
nodes/vertex/56/node = SubResource( 49 )
nodes/vertex/56/position = Vector2( 119.667, -27.6171 )
nodes/vertex/57/node = SubResource( 50 )
nodes/vertex/57/position = Vector2( 160, 100 )
nodes/vertex/58/node = SubResource( 51 )
nodes/vertex/58/position = Vector2( -100, 240 )
nodes/vertex/59/node = SubResource( 52 )
nodes/vertex/59/position = Vector2( -2900, 160 )
nodes/vertex/60/node = SubResource( 53 )
nodes/vertex/60/position = Vector2( -2520, 220 )
nodes/vertex/61/node = SubResource( 54 )
nodes/vertex/61/position = Vector2( -2720, 200 )
nodes/vertex/62/node = SubResource( 55 )
nodes/vertex/62/position = Vector2( -2500, 300 )
nodes/vertex/63/node = SubResource( 56 )
nodes/vertex/63/position = Vector2( -2900, 260 )
nodes/vertex/64/node = SubResource( 57 )
nodes/vertex/64/position = Vector2( -2260, 220 )
nodes/vertex/65/node = SubResource( 58 )
nodes/vertex/65/position = Vector2( -2260, 460 )
nodes/vertex/66/node = SubResource( 59 )
nodes/vertex/66/position = Vector2( -2440, 580 )
nodes/vertex/67/node = SubResource( 61 )
nodes/vertex/67/position = Vector2( -1960, 200 )
nodes/vertex/68/node = SubResource( 62 )
nodes/vertex/68/position = Vector2( -2140, 320 )
nodes/vertex/connections = PoolIntArray( 8, 0, 9, 0, 10, 0, 9, 1, 9, 0, 6, 0, 12, 0, 11, 1, 7, 0, 11, 0, 11, 0, 8, 0, 16, 0, 18, 0, 19, 0, 14, 1, 23, 0, 19, 1, 24, 0, 23, 1, 26, 0, 23, 0, 18, 1, 24, 0, 18, 1, 27, 0, 27, 0, 26, 0, 18, 1, 19, 0, 29, 0, 33, 0, 31, 0, 33, 1, 32, 0, 30, 1, 28, 0, 30, 0, 30, 0, 29, 0, 36, 0, 40, 0, 38, 0, 40, 1, 39, 0, 37, 1, 35, 0, 37, 0, 37, 0, 36, 0, 40, 0, 34, 2, 40, 0, 34, 0, 6, 0, 14, 0, 2, 0, 44, 0, 14, 0, 44, 1, 34, 0, 53, 0, 2, 0, 53, 1, 2, 0, 54, 0, 53, 0, 55, 0, 19, 0, 55, 1, 55, 0, 54, 1, 44, 0, 56, 1, 54, 0, 56, 0, 56, 0, 57, 0, 57, 0, 0, 0, 58, 0, 57, 1, 60, 0, 64, 0, 62, 0, 64, 1, 63, 0, 61, 1, 59, 0, 61, 0, 61, 0, 60, 0, 65, 0, 6, 2, 66, 0, 65, 1, 64, 0, 67, 0, 67, 0, 6, 1, 66, 0, 68, 0, 33, 0, 65, 0, 68, 0, 67, 1 )
nodes/fragment/0/position = Vector2( 420, 160 )
nodes/fragment/2/node = SubResource( 4 )
nodes/fragment/2/position = Vector2( -780, 220 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( -420, 500 )
nodes/fragment/17/node = SubResource( 60 )
nodes/fragment/17/position = Vector2( -220, 260 )
nodes/fragment/18/node = SubResource( 63 )
nodes/fragment/18/position = Vector2( -0.985596, 514.198 )
nodes/fragment/19/node = SubResource( 64 )
nodes/fragment/19/position = Vector2( -220, 600 )
nodes/fragment/connections = PoolIntArray( 2, 0, 17, 0, 17, 0, 0, 1, 16, 0, 18, 0, 18, 0, 0, 5, 19, 0, 18, 1 )
